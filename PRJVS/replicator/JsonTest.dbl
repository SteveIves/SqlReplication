import System.Collections
main JsonTest
	record
		errtxt, string
	endrecord
proc

	call CallMe
	stop

;CallMe,
;	begin
;		data fileExists, boolean
;
;		begin
;			data fsc = new fred.FileServiceClient("http://sisql2017:8080/FileService")
;
;			if (fsc.Exists("Employee.csv_err",fileExists))
;			begin
;				if (fileExists)
;				begin
;					data records, [#]string
;					fsc.DownloadText("Employee.csv_err",records)
;				end
;			end
;		end
;
;	end
;
;	return

CallMe,
	begin
		data fileExists, boolean 

		begin
			data fsc = new fred.FileServiceClient("http://sisql2017:8080/FileService")

			if (fsc.Exists("Employee.csv_err",fileExists))
			begin
				if (fileExists)
				begin
					data records, [#]string
					fsc.DownloadText("Employee.csv_err",records)
				end
			end
		end

	end

	return



endmain

namespace fred

	public class FileServiceClient
		
		private uri, string

		public method FileServiceClient
			required in fileServiceUri, string
		proc
			uri = fileServiceUri
		endmethod

;	public method Upload, boolean
;		required in fileName, string
;		required in localFileSpec, string
;		required out serverFileSpec, string
;		optional out errorText, a
;
;		stack record
;			errtxt, string
;			bodyData, string
;			httpError, int
;			requestHeaders, [#]string
;			responseHeaders, [#]string
;		endrecord
;	proc
;		errtxt = ""
;
;		if (!StringTools.FileToString(localFileSpec,bodyData))
;		begin
;			errtxt = "Failed to read local file"
;			mreturn false
;		end
;
;		requestHeaders = new String[3]
;		requestHeaders[1] = "Host: "
;		requestHeaders[2] = "Content-Type: text/plain"
;		requestHeaders[3] = "Content-Length: " + %string(bodyData.Length)
;
;		if (httpError = %http_post(uri+"/"+fileName,,bodyData,serverFileSpec,errtxt,requestHeaders,responseHeaders,,,,,,,"1.1"))
;			mreturn false
;
;		serverFileSpec = serverFileSpec.Replace("\\","\").Replace('"','')
;
;		if (^passed(errorText))
;			errorText = errtxt
;
;		mreturn true
;
;	endmethod

		public method DownloadText, boolean
			required in  fileName, string
			required out records, [#]string
			optional out errorMessage, string
			stack record
				ok, boolean
				httpError, int
				errtxt, string
				requestHeaders, [#]string
				responseHeaders, [#]string
				responseBody, string
				junk, @ArrayList
			endrecord
		proc
			errtxt = ""

			requestHeaders = new string[1]
			requestHeaders[1] = "Host: "

			responseBody = '["1a|Finley|Solis|QA|2005-05-24|(555) 730-7846|(555) 146-5918|(555) 085-1039|1|1|1960-01-20|09:00|finley.solis@gmail.com|4930 12th Way|Chesapeake|VA|98143","20|Darwin|Gay|HR|2006-05-32|(555) 814-0652|(555) 316-6842|(555) 727-0753|1|0|1957-03-16|09:00|darwin.gay@gmail.com|5767 Runset Court|Bellevue|WA|41522","30|Kobe|Hendrix|MARKETING|2011-08-18|(555) 417-8091|(555) 353-7296|(555) 607-4560|A|0|1984-09-27|09:00|kobe.hendrix@yahoo.com|4756 Taylor Terrace|Port St. Lucie|FL|17589"]'

			junk = new ArrayList()
			for httpError from 1 thru 50
				junk.Add((@int)httpError)

			;using httpError = %http_get(uri+"/text/"+fileName,,responseBody,errtxt,requestHeaders,responseHeaders,,,,,,,"1.1") select
			using httpError = 0 select
			(0), ;OK (actually 200)
			begin
				data parser = new Json.JsonParser()
				data arrayObj, @Json.JsonArray
				data itemObj, @Json.JsonText
				data result, @Json.JsonValue, parser.ParseJson(responseBody)
				data ix, int

				if(result.JsonType != Json.JSON_TYPE.ARRAY_VAL)
					throw new Exception("FileService did not return an array!")

				arrayObj = (Json.JsonArray)result

				records = new string[arrayObj.arrayValues.Count]

				for ix from 0 thru arrayObj.arrayValues.Count-1
				begin
					records[ix+1] = ((Json.JsonText)arrayObj.arrayValues[ix]).Value
				end

				ok = true
			end
			(404), ;Not found
			begin
				records = ^null
				ok = true
			end
			(),
			begin
				errtxt = "HTTP " + %string(httpError) + ": " + errtxt
				records = ^null
				ok = false
			end
			endusing

			if (^passed(errorMessage))
				errorMessage = errtxt

			mreturn ok

		endmethod

		public method Exists, boolean
			required in fileName, string
			required out fileExists, boolean
			optional out errorMessage, string
			endparams
			stack record
				ok, boolean
				httperror, int
				errtxt, string
				requestHeaders, [#]string
				responseHeaders, [#]string
				respopnseBody, string
			endrecord
		proc
			errtxt = ""

			requestHeaders = new string[1]
			requestHeaders[1] = "Host: "

			using httperror = %http_get(uri+"/"+fileName+"/exists",,respopnseBody,errtxt,requestHeaders,responseHeaders,,,,,,,"1.1") select
			(0), ;OK (actually 200)
			begin
				fileExists = true
				ok = true
			end
			(404), ;Not found
			begin
				fileExists = false
				ok = true
			end
			(),
			begin
				errtxt = "HTTP " + %string(httperror) + ": " + errtxt
				fileExists = false
				ok = false
			end
			endusing

			if (^passed(errorMessage))
				errorMessage = errtxt

			mreturn ok

		endmethod
;
;	public method Delete, boolean
;		required in fileName, string
;		endparams
;		stack record
;			errtxt, string
;			requestHeaders, [#]string
;			responseHeaders, [#]string
;			requestBody, string
;			respopnseBody, string
;		endrecord
;	proc
;		if (%http_delete(uri+"/"+fileName,,requestBody,respopnseBody,errtxt,requestHeaders,,,,,,,"1.1"))
;			mreturn false
;		mreturn true
;	endmethod

	endclass

endnamespace