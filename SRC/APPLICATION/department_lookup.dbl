;;*****************************************************************************
;;
;; Routine:     department_lookup
;;
;;*****************************************************************************
;;
;; WARNING:     This code was generated by CodeGen. Any changes that you make
;;              to this file will be lost if the code is regenerated.
;;
;;*****************************************************************************

subroutine department_lookup, reentrant
    required out a_department    ,a      ;Master file record (returned)
    optional in  a_icon          ,a      ;Icon file name
    optional in  a_title         ,a      ;Title for list and list report
    endparams

    .include "WND:tools.def"
    .include "DBLDIR:activex.def"
    .include "INC:structureio.def"
    .include "INC:system.def"

    external function
        department_io, ^val
    endexternal

    .include "DEPARTMENT" repository, record="listdata", nofields

    stack record local_data
        ok                  ,i4     ;OK to continue
        error               ,i4     ;An error occurred
        window_id           ,i4     ;List input window
        lstclass            ,i4     ;List class
        list_id             ,i4     ;List
        control             ,i4     ;List activex control id
        req                 ,i4     ;List processor request
        nullitem            ,i4     ;Is the current list item null?
        headercnt           ,i4     ;List header count
        idf_department_i   ,i4     ;Local channel for master file
        headings            ,a80    ;List headings
        title               ,a80    ;List title
    endrecord

proc

    xcall e_enter

    init local_data
    ok=TRUE

    ;Open the master file
    if (%department_io(IO_OPEN_INP,idf_department_i)!=IO_OK)
    begin
        xcall u_msgbox("Failed to open file DAT:DEPARTMENT.ISM",D_MOK+D_MICONEXCLAM+D_MCENTER,"Error")
        ok=FALSE
    end

    ;Load list input window
    if (ok)
    begin
        xcall i_ldinp(window_id,,"DEPARTMENT_LUP",D_NOPLC,,error)
        if (error) then
        begin
            xcall u_msgbox("Failed to load window DEPARTMENT_LUP",D_MOK+D_MICONEXCLAM+D_MCENTER,"Error")
            ok=FALSE
        end
        else
        begin
            ;Extract list headings from list window
            xcall headings_from_window(window_id,headings)
            if (headings)
                headercnt=1
        end
    end

    ;Create list class
    if (ok)
    begin
        xcall l_class(lstclass,"DEPARTMENT_CLS",,,15,headercnt,,,,,,"department_lookup_load","ACTIVEX",error)
        if (error)
        begin
            xcall u_msgbox("Failed to create list class DEPARTMENT_CLS",D_MOK+D_MICONEXCLAM+D_MCENTER,"Error")
            ok=FALSE
        end
    end

    ;Create list
    if (ok)
    begin
        xcall l_create(list_id,window_id,listdata,,"DEPARTMENT_CLS",,,D_NOPLC,,,,error)
        if (error)
        begin
            xcall u_msgbox("Failed to create list",D_MOK+D_MICONEXCLAM+D_MCENTER,"Error")
            ok=FALSE
        end
    end

    ;Configure list
    if (ok)
    begin

        if (^passed(a_title)&&a_title)
        begin
            title = a_title
            xcall l_sect(list_id,title,D_TITLE)
        end

        if (headings)
            xcall l_sect(list_id,headings,D_HEADER)

        xcall l_button(list_id,DSB_ADD,"OK",DSB_TEXT,"OK")
        xcall l_button(list_id,DSB_ADD,"CANCEL",DSB_TEXT,"Cancel")

        xcall l_buttonset(list_id,DSB_RIGHT,,,"OK")

        if (wndevent_close)
        begin
            xcall l_method(list_id,D_LWNDEVENT,wndevent_close)
            if (^passed(a_icon) && a_icon)
                xcall l_icon(list_id,a_icon,1)
        end

        xcall l_status(list_id,D_LAXCTRL,control)
        xcall ax_set(control,"RowMode",1)
        xcall ax_set(control,"LightItemColor",RGB_VALUE(255,255,180))
        xcall ax_set(control,"SelBackColor",RGB_VALUE(0,0,180))
    end

    ;Process list
    if (ok)
    begin

        xcall position_window(list_id,1)

        ;xcall ui_okcancel(D_ON)

        repeat
        begin

            xcall l_select(list_id,req,listdata,,,,,,,,,,,,,idf_department_i)

            if (g_select) then
            begin
                using g_entnam select
                ("OK"),
                begin
                    call select_record
                    exitloop
                end
                ("CANCEL"),
                    exitloop
                endusing
            end
            else
            begin
                call select_record
                exitloop
            end
        end

    end

    xcall e_exit

    clear g_select

    xreturn

select_record,

    xcall l_status(list_id,D_LNULL,nullitem)
    if (nullitem) then
    begin
        xcall u_msgbox("No record selected.",D_MOK+D_MICONINFO+D_MCENTER)
        clear a_department
    end
    else
        a_department = listdata

    return

endsubroutine

;***************************************************************************************************
;
subroutine department_lookup_load
    a_listid            ,n          ; List id
    a_req               ,n          ; Request flag
    a_data              ,a          ; Item data
    a_inpid             ,n          ; Input window id
    a_disable           ,n          ; (Optional) Disable flag
    a_index             ,n          ; Loading index
    idf_department_i   ,n          ;Master file channel
    endparams

    .include "WND:tools.def"
    .include "INC:structureio.def"

    external function
        department_io, ^val
    endexternal

proc

    if (a_index==1)
    begin
        if (%department_io(IO_FIND_FIRST,idf_department_i,,0)!=IO_OK)
            a_req = D_LEOF
    end

    if (a_req!=D_LEOF)
    begin
        if (%department_io(IO_READ_NEXT,idf_department_i,,,a_data)==IO_OK) then
            xcall i_display(a_inpid,,a_data)
        else
            a_req = D_LEOF
    end

    xreturn

endsubroutine

